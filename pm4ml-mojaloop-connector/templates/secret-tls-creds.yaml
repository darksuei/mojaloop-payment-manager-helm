{{- $ca := genCA "pm4ml-mojaloop-connector" 3650 }}
{{- if (not .Values.secrets.tlsSecretName) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pm4ml-mojaloop-connector.fullname" . }}-tls-creds
  labels:
    app.kubernetes.io/name: {{ include "pm4ml-mojaloop-connector.fullname" . }}-tls-creds
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: "{{ $.Chart.AppVersion }}"
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
data:
  {{- $defaultCert := genSignedCert (printf "%s-mojaloop-connector" .Values.env.DFSP_ID) nil nil 3650 $ca }}
  {{- if (and .Values.env.INBOUND_MUTUAL_TLS_ENABLED .Values.secrets.tls.inbound) }}
  {{- $requiredMessage := "When supplying TLS configuration you must supply all of tls.inbound.cacert, tls.inbound.cert and tls.inbound.key for each simulator." }}
  "inbound-cacert.pem": {{ .Values.secrets.tls.inbound.cacert | required $requiredMessage | b64enc }}
  "inbound-cert.pem":   {{ .Values.secrets.tls.inbound.cert   | required $requiredMessage | b64enc }}
  "inbound-key.pem":    {{ .Values.secrets.tls.inbound.key    | required $requiredMessage | b64enc }}
  {{- else }}
  "inbound-cacert.pem": {{ $ca.Cert | b64enc }}
  "inbound-cert.pem": {{ $defaultCert.Cert | b64enc }}
  "inbound-key.pem": {{ $defaultCert.Key | b64enc }}
  {{- end }}
  {{- if (and .Values.env.OUTBOUND_MUTUAL_TLS_ENABLED .Values.secrets.tls.outbound) }}
  {{- $requiredMessage := "When supplying TLS configuration you must supply all of tls.outbound.cacert, tls.outbound.cert and tls.outbound.key for each simulator." }}
  "outbound-cacert.pem": {{ .Values.secrets.tls.outbound.cacert | required $requiredMessage | b64enc }}
  "outbound-cert.pem":   {{ .Values.secrets.tls.outbound.cert   | required $requiredMessage | b64enc }}
  "outbound-key.pem":    {{ .Values.secrets.tls.outbound.key    | required $requiredMessage | b64enc }}
  {{- else }}
  "outbound-cacert.pem": {{ $ca.Cert | b64enc }}
  "outbound-cert.pem": {{ $defaultCert.Cert | b64enc }}
  "outbound-key.pem": {{ $defaultCert.Key | b64enc }}
  {{- end }}
  {{- if (and .Values.env.TEST_MUTUAL_TLS_ENABLED .Values.secrets.tls.test) }}
  {{- $requiredMessage := "When supplying TLS configuration you must supply all of tls.test.cacert, tls.test.cert and tls.test.key for each simulator." }}
  "test-cacert.pem": {{ .Values.secrets.tls.test.cacert | required $requiredMessage | b64enc }}
  "test-cert.pem":   {{ .Values.secrets.tls.test.cert   | required $requiredMessage | b64enc }}
  "test-key.pem":    {{ .Values.secrets.tls.test.key    | required $requiredMessage | b64enc }}
  {{- else }}
  "test-cacert.pem": {{ $ca.Cert | b64enc }}
  "test-cert.pem": {{ $defaultCert.Cert | b64enc }}
  "test-key.pem": {{ $defaultCert.Key | b64enc }}
  {{- end }}
---
{{- end }}
